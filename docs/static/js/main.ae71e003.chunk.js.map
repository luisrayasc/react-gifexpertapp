{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","cats","type","onClick","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","console","log","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE5B,EAAoCC,mBAAS,mCAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAMC,iBACFJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAMhB,SACE,uBACEO,KAAK,OACLC,QArBc,WAClBR,EAAc,KAqBVS,MAAOV,EACPW,SAnBoB,SAACR,GACzBF,EAAcE,EAAMS,OAAOF,a,+BCblBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,8DAKHI,MAAMF,GALH,cAKfG,EALe,gBAMEA,EAAIC,OANN,uBAMbC,EANa,EAMbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAZhB,kBAedM,GAfc,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACvC,OACE,sBAAKc,UAAU,2CAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCCGO,EAAU,YAAyB,IAAbnB,EAAY,EAAZA,SACjC,ECD0B,SAACA,GAC3B,MAA0Bf,mBAAS,CACjCsB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACC,GAAD,OACrBC,YAAW,WACTC,QAAQC,IAAIH,GACZH,EAAS,CACPf,KAAMkB,EACNL,SAAS,MAEV,UAEJ,CAACpB,IAEGqB,EDjB2BQ,CAAa7B,GAAvCoB,EAAR,EAAQA,QAAeP,EAAvB,EAAiBN,KAEjB,OACE,qCACE,6BAAKP,IAEJoB,GAAW,2DAEZ,qBAAKJ,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEdnBmB,EAAe,WAC1B,MAAoC7C,mBAAS,CAAC,cAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAEA,OACE,gCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACG+C,EAAWtB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCRxBgC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.ae71e003.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n  // State inicial\n  const [inputValue, setInputValue] = useState('Ingrese una serie o pelÃ­cula');\n\n  // Handler functions\n  const handleClear = () => {\n    setInputValue('');\n  };\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (inputValue.trim().length > 2) {\n      setCategories((cats) => [inputValue, ...cats]);\n      setInputValue('');\n    }\n  };\n\n  // Output for rendering\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        onClick={handleClear}\n        value={inputValue}\n        onChange={handleInputChange}\n      ></input>\n    </form>\n  );\n};\n\n// Reglas para las propiedades que se le pasarÃ¡n al componente\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=3&api_key=j1x5hbxKCPXsl5qTCM4SNutQCOdK2ayt`;\n\n  const res = await fetch(url);\n  const { data } = await res.json();\n\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images.downsized_medium.url,\n    };\n  });\n  return gifs;\n};\n","import React from 'react';\n\nexport const GifGridItem = ({ id, title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeInUp\">\n      <img src={url} alt={title}></img>\n      <p>{title}</p>\n    </div>\n  );\n};\n","import React from 'react'; // Libreria de react\nimport PropTypes from 'prop-types'; // define reglas para los props de cada componente\n\nimport { useFetchGifs } from '../hooks/useFetchGifs'; // custom hook\n\nimport { GifGridItem } from './GifGridItem'; // Componente para renderizar cada imagen\n\nexport const GifGrid = function ({ category }) {\n  const { loading, data: images } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3>{category}</h3>\n\n      {loading && <p> Cargando... ðŸ¤– </p>}\n\n      <div className=\"card-grid\">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n\n// Reglas para cada prop\nGifGrid.propTypes = {\n  category: PropTypes.string.isRequired,\n};\n","// use es una convenciÃ³n para nombrar un hook\n// un hook es una funciÃ³n\n\nimport { useState, useEffect } from 'react';\n\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) =>\n      setTimeout(() => {\n        console.log(imgs);\n        setState({\n          data: imgs,\n          loading: false,\n        });\n      }, 1000)\n    );\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = function () {\n  const [categories, setCategories] = useState(['Star Wars']);\n\n  return (\n    <div>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr></hr>\n      <ol>\n        {categories.map((category) => (\n          <GifGrid key={category} category={category} />\n        ))}\n      </ol>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp'; // Main  App\nimport './index.css'; // Estilo CSS\n\n// Renderizamos el main App\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n\n// GifExpertApp\n"],"sourceRoot":""}